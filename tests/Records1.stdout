Scope errors:

Definitions:
  Definition 1, from Records1.decl0:
    data [4mInt[0m
  Definition 2, from Records1.decl1:
    data [4mRecords[0m = Records { field1 :: Int, field2 :: Int }
  Definition 3, from Records1.decl1:
    data Records = [4mRecords[0m { field1 :: Int, field2 :: Int }
  Definition 4, from Records1.decl1:
    data Records = Records { [4mfield1[0m :: Int, field2 :: Int }
  Definition 5, from Records1.decl1:
    data Records = Records { field1 :: Int, [4mfield2[0m :: Int }
  Definition 6, from Records1.decl2:
    ([4m+[0m) = (+)
  Definition 7, from Records1.decl3:
    [4msum x = field1 x + field2 x[0m
  Definition 8, from Records1.decl3.match0:
    sum [4mx[0m = field1 x + field2 x

Use sites:
  Definition used: 1
    data Records = Records { field1 :: [4mInt[0m, field2 :: Int }
  Definition used: 1
    data Records = Records { field1 :: Int, field2 :: [4mInt[0m }
  Definition used: 6
    (+) = ([4m+[0m)
  Definition used: 7
    [4msum[0m x = field1 x + field2 x
  Definition used: 4
    sum x = [4mfield1[0m x + field2 x
  Definition used: 8
    sum x = field1 [4mx[0m + field2 x
  Definition used: 6
    sum x = field1 x [4m+[0m field2 x
  Definition used: 5
    sum x = field1 x + [4mfield2[0m x
  Definition used: 8
    sum x = field1 x + field2 [4mx[0m
